auth_backends.1 = rabbit_auth_backend_oauth2

management.oauth_enabled = true
management.oauth_client_id = rabbitmq-client-code
management.oauth_scopes = openid profile rabbitmq.tag:administrator

# change from http://ipaddr:8080 to https://ipaddr:8443 when certs are correct
management.oauth_provider_url = https://192.168.8.187:8443/realms/FindME

auth_oauth2.resource_server_id = rabbitmq
auth_oauth2.preferred_username_claims.1 = user_name
auth_oauth2.additional_scopes_key = extra_scope
auth_oauth2.default_key = Gnl2ZlbRh3rAr6Wymc988_5cY7T5GuePd5dpJlXDJUk
auth_oauth2.signing_keys.Gnl2ZlbRh3rAr6Wymc988_5cY7T5GuePd5dpJlXDJUk = /etc/rabbitmq/signing-key.pem

listeners.ssl.default = 5671
ssl_options.cacertfile = /etc/rabbitmq/intermediate_ca.crt
ssl_options.certfile = /etc/rabbitmq/rabbitmq.crt
ssl_options.keyfile = /etc/rabbitmq/rabbitmq.key
ssl_options.verify = verify_peer
ssl_options.depth  = 2
ssl_options.fail_if_no_peer_cert = true
ssl_options.versions.1 = tlsv1.3
ssl_options.ciphers.1 = TLS_AES_256_GCM_SHA384

management.ssl.port       = 15671
management.ssl.cacertfile = /etc/rabbitmq/intermediate_ca.crt
management.ssl.certfile   = /etc/rabbitmq/rabbitmq.crt
management.ssl.keyfile    = /etc/rabbitmq/rabbitmq.key
## This key must only be used if private key is password protected
management.ssl.password   = 1234567890

# default TLS-enabled port for MQTT connections
mqtt.listeners.ssl.default = 8883
mqtt.listeners.tcp.default = 1883
mqtt.allow_anonymous = false
mqtt.vhost            = /
mqtt.exchange         = amq.topic
mqtt.subscription_ttl = 86400000
mqtt.prefetch         = 10
mqtt.ssl_cert_login = true
ssl_cert_login_from      = subject_alternative_name
ssl_cert_login_san_type  = email
ssl_cert_login_san_index = 0

